Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
| Date         : Thu Apr 28 22:45:41 2022
| Host         : DESKTOP-ICG9OBG running 64-bit major release  (build 9200)
| Command      : report_drc -file fine_sync_drc_opted.rpt -pb fine_sync_drc_opted.pb -rpx fine_sync_drc_opted.rpx
| Design       : fine_sync
| Device       : xczu7ev-ffvc1156-2-e
| Speed File   : -2
| Design State : Synthesized
------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: checkpoint_fine_sync
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 49
+--------+------------------+----------------------------+------------+
| Rule   | Severity         | Description                | Violations |
+--------+------------------+----------------------------+------------+
| UCIO-1 | Critical Warning | Unconstrained Logical Port | 1          |
| DPIP-2 | Warning          | Input pipelining           | 24         |
| DPOP-3 | Warning          | PREG Output pipelining     | 12         |
| DPOP-4 | Warning          | MREG Output pipelining     | 12         |
+--------+------------------+----------------------------+------------+

2. REPORT DETAILS
-----------------
UCIO-1#1 Critical Warning
Unconstrained Logical Port  
4 out of 244 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: clk, fineEnable, o_valid, reset.
Related violations: <none>

DPIP-2#1 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yi1 input u_fine_sync_cmplx_mul1/yi1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yi1 input u_fine_sync_cmplx_mul1/yi1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yi1__0 input u_fine_sync_cmplx_mul1/yi1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yi1__0 input u_fine_sync_cmplx_mul1/yi1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yr1 input u_fine_sync_cmplx_mul1/yr1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yr1 input u_fine_sync_cmplx_mul1/yr1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yr1__0 input u_fine_sync_cmplx_mul1/yr1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul1/yr1__0 input u_fine_sync_cmplx_mul1/yr1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yi1 input u_fine_sync_cmplx_mul2/yi1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yi1 input u_fine_sync_cmplx_mul2/yi1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yi1__0 input u_fine_sync_cmplx_mul2/yi1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yi1__0 input u_fine_sync_cmplx_mul2/yi1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yr1 input u_fine_sync_cmplx_mul2/yr1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yr1 input u_fine_sync_cmplx_mul2/yr1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yr1__0 input u_fine_sync_cmplx_mul2/yr1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul2/yr1__0 input u_fine_sync_cmplx_mul2/yr1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yi1 input u_fine_sync_cmplx_mul3/yi1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yi1 input u_fine_sync_cmplx_mul3/yi1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yi1__0 input u_fine_sync_cmplx_mul3/yi1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yi1__0 input u_fine_sync_cmplx_mul3/yi1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yr1 input u_fine_sync_cmplx_mul3/yr1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yr1 input u_fine_sync_cmplx_mul3/yr1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yr1__0 input u_fine_sync_cmplx_mul3/yr1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP u_fine_sync_cmplx_mul3/yr1__0 input u_fine_sync_cmplx_mul3/yr1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yi1 output u_fine_sync_cmplx_mul1/yi1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yi1__0 output u_fine_sync_cmplx_mul1/yi1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yr1 output u_fine_sync_cmplx_mul1/yr1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yr1__0 output u_fine_sync_cmplx_mul1/yr1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yi1 output u_fine_sync_cmplx_mul2/yi1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yi1__0 output u_fine_sync_cmplx_mul2/yi1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yr1 output u_fine_sync_cmplx_mul2/yr1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yr1__0 output u_fine_sync_cmplx_mul2/yr1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yi1 output u_fine_sync_cmplx_mul3/yi1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yi1__0 output u_fine_sync_cmplx_mul3/yi1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yr1 output u_fine_sync_cmplx_mul3/yr1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yr1__0 output u_fine_sync_cmplx_mul3/yr1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yi1 multiplier stage u_fine_sync_cmplx_mul1/yi1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yi1__0 multiplier stage u_fine_sync_cmplx_mul1/yi1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yr1 multiplier stage u_fine_sync_cmplx_mul1/yr1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul1/yr1__0 multiplier stage u_fine_sync_cmplx_mul1/yr1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yi1 multiplier stage u_fine_sync_cmplx_mul2/yi1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yi1__0 multiplier stage u_fine_sync_cmplx_mul2/yi1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yr1 multiplier stage u_fine_sync_cmplx_mul2/yr1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul2/yr1__0 multiplier stage u_fine_sync_cmplx_mul2/yr1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yi1 multiplier stage u_fine_sync_cmplx_mul3/yi1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yi1__0 multiplier stage u_fine_sync_cmplx_mul3/yi1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yr1 multiplier stage u_fine_sync_cmplx_mul3/yr1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP u_fine_sync_cmplx_mul3/yr1__0 multiplier stage u_fine_sync_cmplx_mul3/yr1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


